# jwt configuration
jwt:
  signing-key: 'qmPlus'
  expires-time: 604800
  buffer-time: 86400
  issuer: 'qmPlus'
# zap logger configuration
zap:
  level: 'info'
  format: 'console'
  prefix: '[github.com/nooncall/owls/go]'
  director: 'log'
  show-line: true
  encode-level: 'LowercaseColorLevelEncoder'
  stacktrace-key: 'stacktrace'
  log-in-console: true

# casbin configuration
casbin:
  model-path: './resource/rbac_model.conf'

# system configuration
system:
  env: 'public'  # Change to "develop" to skip authentication for development mode
  addr: 8778
  db-type: 'mysql'
  oss-type: 'local'    # 控制oss选择走本地还是 七牛等其他仓 自行增加其他oss仓可以在 go/utils/upload/upload.go 中 NewOss函数配置
  use-redis: false     # 使用redis
  use-multipoint: false
  # IP限制次数 一个小时15000次
  iplimit-count: 15000
  #  IP限制一个小时
  iplimit-time: 3600
  show_sql: true

# captcha configuration
captcha:
  key-long: 6
  img-width: 240
  img-height: 80

# mysql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://www.github.com/flipped-aurora/gin-vue-admin/server.com/docs/first）
mysql:
  path: ''
  port: ''
  config: ''
  db-name: ''
  username: ''
  password: ''
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

# pgsql connect configuration
# 未初始化之前请勿手动修改数据库信息！！！如果一定要手动初始化请看（https://www.github.com/flipped-aurora/gin-vue-admin/server.com/docs/first）
pgsql:
  path: ''
  port: ''
  config: ''
  db-name: ''
  username: ''
  password: ''
  max-idle-conns: 10
  max-open-conns: 100
  log-mode: ""
  log-zap: false

# local configuration
local:
  path: 'uploads/file'

# autocode configuration
autocode:
  transfer-restart: true
  # root 自动适配项目根目录
  # 请不要手动配置,他会在项目加载的时候识别出根路径
  root: ""
  server: /go
  server-plug: /plugin/%s
  server-api: /api/v1/%s
  server-initialize: /initialize
  server-model: /model/%s
  server-request: /model/%s/request/
  server-router: /router/%s
  server-service: /service/%s
  web: /web/src
  web-api: /api
  web-form: /view
  web-table: /view

# excel configuration
excel:
  dir: './resource/excel/'

# 跨域配置
# 需要配合 go/initialize/router.go#L32 使用
cors:
  mode: whitelist # 放行模式: allow-all, 放行全部; whitelist, 白名单模式, 来自白名单内域名的请求添加 cors 头; strict-whitelist 严格白名单模式, 白名单外的请求一律拒绝
  whitelist:
    - allow-origin: example1.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值
    - allow-origin: example2.com
      allow-headers: content-type
      allow-methods: GET, POST
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type
      allow-credentials: true # 布尔值

db-filter:
  log-level: "debug" # debug, info, warning, error
  log-dir: "./"
  num-once-limit: 100
  exec-no-backup: false # 备份失败是否继续执行
  aes-key: "l02mx893j3283445"
  aes-iv: "08783ksu3k390dj3" # length same to ase_key; 16
  read-need-auth: false
  reviewers:
    - "zhangdashu"
    - "wangdazhang"

login:
  model: "registry" # ldap, registry, others
  ldap:
    host: "ldap.pri.ibanyu.com"
    port: 389
    base-dn: "dc=ipalfish,dc=com"
    use-ssl: false
    bind-dn: "cn=Manager,dc=ipalfish,dc=com"
    bind-pwd: "Ccjsj1200"
  login-path: "http://baidu.com"
  token-secret: "ipalfish-db-injection-c362ef0dce45bb48b8f400e34b74c37b"
  token-effective_hour: 1
  init-password: "aaaaaa"

